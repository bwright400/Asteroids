#ifndef VELOCITY_H
#define VELOCITY_H

#include "point.h"
/*********************************************
 * VELOCITY
 *     Direction and speed for the points.
 *********************************************/
class Velocity
{
  public:
  Velocity() : pt(), dx(0), dy(0) {} ;                    //constructors
   Velocity(float x, float y, float dx, float dy);
   Velocity(float dx, float dy);
   //Velocity(Velocity & vel);
   //~Velocity() {}// destructor
   Point getPt() {return pt;}
   //void addDx(float x) { pt.}
   void addDx(float dx) { pt.addX(dx); }
   void addDy(float dy) { pt.addY(dy); }

   const float getDx() const { return dx; };
   const float getDy() const { return dy; };

   //void setDx(float dx);                                  //copy dx to a new dx
   //void setDy(float dy);                                  //copy dy to a new dy

   float getX() const { pt.getX(); };                    //copy x to a new x
   float getY() const { pt.getY(); };                    //copy y to a new y

  private:
   Point pt;
   float dx;
   float dy;

};
// Put your velocity class here, or overwrite this file with your own
// velocity class from the previous project


#endif /* velocity_h */
